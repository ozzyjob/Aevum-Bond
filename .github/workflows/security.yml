name: Security Scan

on:
    schedule:
        - cron: "0 2 * * *" # Run daily at 2 AM UTC
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    security-audit:
        name: Security Audit
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Install cargo-audit
              run: cargo install cargo-audit

            - name: Cache cargo dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                  key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}

            - name: Run cargo audit
              run: cargo audit --format json --output audit-results.json
              continue-on-error: true

            - name: Upload audit results
              uses: actions/upload-artifact@v4
              with:
                  name: security-audit-results
                  path: audit-results.json

    dependency-review:
        name: Dependency Review
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Dependency Review
              uses: actions/dependency-review-action@v4
              with:
                  fail-on-severity: moderate
                  allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, CC0-1.0

    codeql-analysis:
        name: CodeQL Analysis
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write
        strategy:
            fail-fast: false
            matrix:
                language: ["rust"]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                  languages: ${{ matrix.language }}
                  queries: security-extended,security-and-quality

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Build project
              run: cargo build --release --all

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
              with:
                  category: "/language:${{matrix.language}}"

    secret-scanning:
        name: Secret Scanning
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Run TruffleHog
              uses: trufflesecurity/trufflehog@main
              with:
                  path: ./
                  base: main
                  head: HEAD
                  extra_args: --debug --only-verified

    supply-chain-security:
        name: Supply Chain Security
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Install cargo-deny
              run: cargo install cargo-deny

            - name: Check licenses
              run: cargo deny check licenses

            - name: Check advisories
              run: cargo deny check advisories

            - name: Check bans
              run: cargo deny check bans

            - name: Check sources
              run: cargo deny check sources

    vulnerability-assessment:
        name: Vulnerability Assessment
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload Trivy scan results
              uses: github/codeql-action/upload-sarif@v3
              with:
                  sarif_file: "trivy-results.sarif"

    security-scorecard:
        name: OSSF Scorecard
        runs-on: ubuntu-latest
        permissions:
            security-events: write
            id-token: write
            actions: read
            contents: read
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Run analysis
              uses: ossf/scorecard-action@v2.3.1
              with:
                  results_file: results.sarif
                  results_format: sarif
                  publish_results: true

            - name: Upload SARIF results
              uses: github/codeql-action/upload-sarif@v3
              with:
                  sarif_file: results.sarif
